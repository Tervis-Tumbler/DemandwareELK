input {
  file {
    path => "C:\Users\cmagnuson\Desktop\DemandwareLogs\customerror-blade2-2-appserver-20160328.log"
    type => "customerror"
    tags => "production"
	sincedb_path => "NUL"
    codec => multiline {
        pattern => "\A\[%{TIMESTAMP_ISO8601:demandware_timestamp} GMT\].*\n"
        negate => true
        what => previous
    }
  }
}

filter {
    grok {
        match => { "message" => "\A\[%{TIMESTAMP_ISO8601:demandware_timestamp} GMT\]" }
    }
    date {
        match => ["demandware_timestamp", "YYYY-MM-dd HH:mm:ss.SSS"]
    }
	
    mutate {
        gsub => [
            "message", "\[[0-9\:\s\.\-A-Z]+\]\s", ""
        ]
    }
    grok {
        break_on_match => false
        match => [ "message", "%{WORD:_LoggerLevel}\s%{WORD:servlet}\|%{NUMBER:idk}\|%{DATA:sitename}\|%{DATA:action}\|%{WORD:pipeline}\|%{DATA:sessionid} %{DATA:ExceptionClass}\s\s\-\s%{DATA:sitename}\s%{WORD:ExceptionType}\s%{WORD:storefront}\s%{DATA:sessionid}\s%{DATA:random}\s%{DATA:alsorandom}\s%{GREEDYDATA:short_message}" ]
        match => [ "message", "%{WORD:_LoggerLevel}\s%{WORD:servlet}\|%{NUMBER:idk}\|%{DATA:sitename}\|%{DATA:action}\|%{WORD:pipeline}\|%{DATA:sessionid} %{DATA:ExceptionClass} %{GREEDYDATA:short_message}" ]
    }
}
output {
	stdout { codec => rubydebug }
  # elasticsearch {
        # host => "localhost"
        # port => 9300
  # }
}